#include <stdio.h>

double square(double x, double value) //calculating the square function
{
    return x*x-value;
}

double square_derivative(double x, double value) //calculating derivative the square function
{
    return 2*x;
}

double power3(double x, double value) //calculating third degree functions
{
    return x*x*x-value;
}

double power3_derivative(double x, double value) //calculating derivative third degree functions
{
    return 3*x*x;
}

double solve(double fun(double, double), double fun_der(double, double), double x0, double param) //looking for the root of a function
{
    double x = x0;
    double fx; //function value
    double eps = 1e-12; //approximation

    do
    {
        fx = fun(x,param); // function for next approximation x
        double fpx = fun_der(x, param); //derivative of function value for next approximation x
        x = x - fx / fpx;
    } while (fx > eps || fx < -eps);
    
    return x;
}

int main()
{
    double x =solve(power3, power3_derivative, 1.0, 8.0); // for powe 3 function
    //double x =solve(square, square_derivative, 1.0, 9.0); // for square function

   return 0;
}