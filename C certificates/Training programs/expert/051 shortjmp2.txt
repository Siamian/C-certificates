#include <stdio.h>

typedef enum err_code //tworzymy zmienna do błędów
{
    no_error = 0,
    connetion_error = 1,
    measurement_error = 2
}err_code;

err_code connect_to_device();
err_code measure();
void disconnect_from_device();

int connection1();
int connection2();
int connection3();

int measure1();
int measure2();

int main()
{
    err_code err;
    if((err=connect_to_device()) == no_error)
    {
        if((err=measure()) == no_error)
        {
            disconnect_from_device();
            return 0;
        }else
        {
            return err;
        }
    }else
    {
        return err;
    }
    


    return 0;
}

int measure1()
{
    return 0;
}
int measure2()
{
    return 0;
}

int connection1()
{
    return 0;
}
int connection2()
{
    return 0;
}
int connection3()
{
    return 0;
}

err_code connect_to_device()
{
    printf("Allocating resources\n");
    if (connection1() != 0)
        goto ERR;  //skok do etykiety o nazwie ERR:

    if (connection2() != 0)
        goto ERR;

    if (connection3() != 0)
        goto ERR;

    return no_error; //musimy powrócic bo inaczej printf("Free resources\n"); wykona sie mimo wszystko, ERR nie jest warunkiem

           //etykieta ERR czyli miejsce od ktorego jest kontynuowane dzialanie programu od komendy goto ERR
    ERR:   //reszta programu wyzej jest pomijana
        printf("Free resources\n");
        return connetion_error;
}
err_code measure()
{
    if(measure1() != 0)
    {
        return measurement_error;
    }

    if(measure2() != 0)
    {
        return measurement_error;
    }

    printf("Measurement taken\n");
    return no_error;

}
void disconnect_from_device()
{}
