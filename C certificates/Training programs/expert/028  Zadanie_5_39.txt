#include <stdio.h>

void convert_to_postfix(char input[], char output[])
{

    char stos [32]; //bufor
    int prio = 4; // 4 to znaczy ze jest pusty, priorytet
    int j = 0;
    int i = 0; //pozycja wejscia
    int n = 0; //pozycja wyjscia

    while(input[i] != 0)
    {

        switch(input[i])
        {
            case '+':

                if((1 > prio) || (prio == 4))
                {
                stos[j] = '+';
                prio = 1;
                j++;
                }else
                {
                    while(j>=0)
                    {
                        j--;
                        output[n] = stos[j];
                        n++;
                    }

                    j = 0;
                    stos[j] = '+';
                    j++;
                }
                
                break;
            case '*':

                if((2 > prio) || (prio == 4))
                {
                stos[j] = '*';
                prio = 2;
                j++;
                }else
                {
                    while(j>=0)
                    {
                        j--;
                        output[n] = stos[j];
                        n++;
                    }

                    j = 0;
                    stos[j] = '*';
                    j++;
                }

                break;
            case '(':
                stos[j] = '(';
                prio = 0;
                j++;

                break;
            case ')':
                while(j>=0)
                {
                    j--;
                    prio = 1;

                    if(stos[j] != '(')
                    {
                    output[n] = stos[j];
                    n++;
                    }else
                    {
                        break;
                    }
                }

                break;

            default:
                output[n] = input[i];
                n++;
                break;
        }
        i++;

    }

    while(j>=0)
    {
        j--;
        output[n] = stos[j];
        n++;
    }
    output[n-1] = 0;
}

int compute_postfix(char expr[])
{   
    int stos [32]; //bufor
    int i = 0; //pozycja w tablicy expr
    int j = 0; //pozycja w tablicy stos

    while(expr[i] != 0)
    {

        switch(expr[i])
        {
            case '+':
                stos[j-2] = (stos[j-1]) + (stos[j-2]);
                j--;
                break;
            case '*':
                stos[j-2] = (stos[j-1]) * (stos[j-2]);
                j--;
                break;
            default:
                stos[j] = expr[i] - '0';
                j++;
                break;
        }
        i++;
    }
    j--;

    return stos[j];
}

int comput(char expr[])
{
    char output[32];
    convert_to_postfix(expr, output);

    return compute_postfix(output);
}

int main()
{
    int i;

    //char expr[32] = "1+2";            //12+     //3
    //char expr[32] = "1+2*3";          //123*+   //7
    //char expr[32] = "(1+2)*3";        //12+3*   //9
    char expr[32] = "((1+2)*(3+4))";  //12+34+*   //21

    printf("\nDo obliczenia:\n");
    i=0;
    while(expr[i] != 0)
    {
        printf("%c", expr[i]);
        i++;
    }
    printf("\n");
    printf("\n\tWynik: %d\n", comput(expr));

    return 0;
}