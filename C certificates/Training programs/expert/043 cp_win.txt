#include <stdio.h>
#include <windows.h> //biblioteka WinAPI

#define BUFFSIZE 1024

int main(int argc, char** argv) //argc to liczba wprowadzonych argumentow. argv[1] jako plik wejsciowy, argv[2] jako plik wynikowy,  argv[0] to nazwa pliku wiec zaczynamy od argv[1]
{
    HANDLE inputFile;        //zmienna wejsciowa do zapisu pliku
    HANDLE outputFile;       //zmienna wejsciowa do zapisu pliku
    DWORD noReadBytes;        //liczba odczytanych bajtów
    DWORD noWritteBytes;      //liczba zapisanych bajtów
    CHAR buffer[BUFFSIZE];   //tablica bufforu

    if (argc != 3) //sprawdza czy podano odpowiednia ilosc argumentow, argv[0] to nazwa pliku, argv[1] i argv[2] to nasze argumenty
    {
        printf("Usage: cp input output\n");
        return 1;
    }

    inputFile = CreateFile(argv[1], GENERIC_READ, FILE_SHARE_READ,
                NULL, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, NULL); //otwarcie pliku wejsciowego , argv[0] to nazwa pliku wiec zaczynamy od argv[1]
    // GENERIC_READ   -> tryb do odczytu
    //FILE_SHARE_READ -> pozwala odczytywac plik kilku procesom na raz jednoczesnie (bez zapisu)
    // OPEN_EXISTING  -> plik mam byc otwarty jesli istnieje

    if (inputFile == INVALID_HANDLE_VALUE) //sprawdza czy w inputFile zostalo cos wpisane/czy operacja ww zostala przeprowadzona poprawnie
    {
        printf("Cannot open file %s\n", argv[1]);
        return 2;
    }

    outputFile = CreateFile(argv[2], GENERIC_WRITE, 0,
                NULL, CREATE_ALWAYS, FILE_ATTRIBUTE_NORMAL, NULL); //otwarcie pliku wejsciowego, argv[0] to nazwa pliku wiec zaczynamy od argv[1]
    // GENERIC_WRITE   -> tryb do zapisu
    //CREATE_ALWAYS -> plik tworzony od nowa, jeli istnieje zostanie usuniety i utworzony na nowo

    if (outputFile == INVALID_HANDLE_VALUE) //sprawdza czy w inputFile zostalo cos wpisane/czy operacja ww zostala przeprowadzona poprawnie
    {
        printf("Cannot open file %s\n", argv[2]);
        return 3;
    }

                        //operacja przepisywania
    while(ReadFile(inputFile, buffer, BUFFSIZE, &noReadBytes, NULL) && noReadBytes > 0)  //czyta plik wejsciowy do bufora
    {
        WriteFile(outputFile, buffer, noReadBytes, &noWritteBytes, NULL); //zapisuje plik z bufora do wyjscia

        if(noWritteBytes != noReadBytes) //sprawdza czy liczba bajtow odczytanych rowna sie liczbie bajtow zapisanych
                                            // sprawdza czy skopiowano wszystko
        {
            printf("Error during copying the file\n");
            return 4;
        }
    }

    CloseHandle(inputFile); //zamknij uchwytu (pliku?) wejsciowy
    CloseHandle(outputFile); //zamknij uchwytu (pliku?) wyjsciowy

    return 0;
}